#  Bike Rental E-commerce (FastAPI + React)

A simple, easy-to-understand full-stack web app for renting bikes online.

---

##  Overview

**Frontend:** React + Tailwind CSS
**Backend:** FastAPI (Python) + SQLite
**Auth:** JWT-based Login/Signup

Users can:

* Browse available bikes
* Book bikes for specific dates
* Manage bookings after login

Admins can:

* Add / Update / Delete bikes
* View bookings

---

##  Project Structure

```
bike-rental/
│
├── backend/
│   ├── main.py
│   ├── models.py
│   ├── schemas.py
│   ├── database.py
│   ├── auth.py
│   ├── routers/
│   │   ├── bikes.py
│   │   └── bookings.py
│   ├── requirements.txt
│
├── frontend/
│   ├── src/
│   │   ├── components/
│   │   ├── pages/
│   │   └── App.jsx
│   ├── package.json
│
└── README.md
```

---

##  Backend (FastAPI)

### 1. Install & Run

```bash
cd backend
pip install -r requirements.txt
uvicorn main:app --reload
```

### 2. Example Files

**database.py**

```python
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

SQLALCHEMY_DATABASE_URL = 'sqlite:///./bikerental.db'
engine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={'check_same_thread': False})
SessionLocal = sessionmaker(bind=engine, autoflush=False)
Base = declarative_base()
```

**models.py**

```python
from sqlalchemy import Column, Integer, String, Float, Boolean
from database import Base

class Bike(Base):
    __tablename__ = 'bikes'
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, index=True)
    price_per_hour = Column(Float)
    available = Column(Boolean, default=True)
```

**main.py**

```python
from fastapi import FastAPI
from database import Base, engine
import models
from routers import bikes, bookings

app = FastAPI(title='Bike Rental API')

models.Base.metadata.create_all(bind=engine)

app.include_router(bikes
```
